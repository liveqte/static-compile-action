name: Build PRoot v5.4.0 (static)

on:
  workflow_dispatch:
  push:
      branches: [ main ]
      paths:
        - '.github/workflows/build-proot.yml'

jobs:
  build:
    name: "Test ${{ matrix.SECCOMP == '1' && 'with seccomp' || 'no seccomp' }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        SECCOMP: [ 0, 1 ]
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # 更新到最新版本

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq clang-tools-6.0 curl gdb lcov libarchive-dev libtalloc-dev sloccount strace swig uthash-dev python3-dev lzop

      - name: Info
        run: sloccount --details .

      - name: Build PRoot
        run: |
          # 创建二进制文件输出目录
          mkdir -p ../bin
          
          # 构建 loader 和配置
          make -C src loader.elf loader-m32.elf build.h
          
          # 构建主程序（使用静态链接）
          make -C src proot LDFLAGS="-static -ltalloc -larchive" EXTENSIONS=""
          
          # 复制生成的二进制文件到统一目录
          cp src/proot ../bin/proot-x86_64-seccomp-${{ matrix.SECCOMP }}

      - name: Test
        run: |
          env ${{ matrix.SECCOMP == '0' && 'PROOT_NO_SECCOMP=1' || '' }} PATH=/bin:/usr/bin:/sbin:/usr/sbin:$PWD/src make -C test -j $(nproc) QUIET_LOG=$PWD/test.log

      - name: Log
        if: always()
        run: ([ -f test.log ] && cat test.log) || true

      - name: Prepare binaries for commit
        run: |
          # 创建工作区目录（如果不存在）
          mkdir -p $GITHUB_WORKSPACE/bin
          # 复制所有生成的二进制文件到工作区
          cp -r ../bin/* $GITHUB_WORKSPACE/bin/ || echo "没有二进制文件可复制"

      - name: Commit binaries
        run: |
          cd $GITHUB_WORKSPACE
          # 检查是否有二进制文件需要提交
          if [ -n "$(ls -A bin/ 2>/dev/null)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add bin/
            git commit -m "Add PRoot binaries (seccomp: ${{ matrix.SECCOMP }}) built from $GITHUB_SHA" || echo "无变化可提交"
            git push || echo "推送失败或无需推送"
          else
            echo "没有二进制文件可提交"
          fi
