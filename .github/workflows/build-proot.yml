name: Build PRoot v5.4.0 (static)

on:
  workflow_dispatch:
  push:
      branches: [ main ]
      paths:
        - '.github/workflows/build-proot.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git libarchive-dev libtalloc-dev
          
          if [ "${{ matrix.arch }}" = "aarch64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
            sudo apt-get install -y libarchive-dev:aarch64 libtalloc-dev:aarch64
          fi

      - name: Fetch proot v5.4.0 source
        run: |
          git clone --depth=1 --branch v5.4.0 https://github.com/proot-me/proot.git
          echo "SRC_DIR=$PWD/proot" >> $GITHUB_ENV
          mkdir -p bin
          
      - name: Verify talloc libraries
        run: |
          echo "查找 talloc 库:"
          find /usr -name "*talloc*" 2>/dev/null
          echo "检查静态库:"
          find /usr -name "libtalloc.a" 2>/dev/null
          
      - name: Build for ${{ matrix.arch }}
        run: |
          cd $SRC_DIR/src
          make clean
          
          # 移除 Python 扩展相关文件
          rm -f proot_wrap.c 2>/dev/null || true
          rm -rf extension/python/ 2>/dev/null || true
          
          if [ "${{ matrix.arch }}" = "x86_64" ]; then
            # x86_64 构建 - 明确链接 talloc
            make -j$(nproc) LDFLAGS="-static -ltalloc" EXTENSIONS=""
            cp proot $GITHUB_WORKSPACE/bin/proot-${{ matrix.arch }}
          else
            # aarch64 构建 - 使用交叉编译器并链接 talloc
            make -j$(nproc) CC="aarch64-linux-gnu-gcc" LDFLAGS="-static -L/usr/lib/aarch64-linux-gnu -ltalloc" EXTENSIONS=""
            cp proot $GITHUB_WORKSPACE/bin/proot-${{ matrix.arch }}
          fi

      - name: Verify binary
        run: |
          echo "验证二进制文件:"
          file $GITHUB_WORKSPACE/bin/proot-${{ matrix.arch }}
          echo "检查静态链接:"
          ldd $GITHUB_WORKSPACE/bin/proot-${{ matrix.arch }} 2>&1 | grep -q "not a dynamic executable" && echo "✓ 静态链接成功" || echo "⚠ 不是静态二进制文件"

      - name: Commit binaries
        run: |
          cd $GITHUB_WORKSPACE
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add bin/
          git commit -m "Add static proot binaries for ${{ matrix.arch }}" || echo "无变化可提交"
          git push || echo "推送失败或无需推送"
